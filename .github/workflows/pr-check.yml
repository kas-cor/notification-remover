name: PR Quality Check

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened ]

jobs:
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout PR
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Run quick tests
      run: ./gradlew testDebugUnitTest --no-daemon
    
    - name: Run lint
      run: ./gradlew lintDebug --no-daemon
    
    - name: Check code style
      run: |
        # Check for wildcard imports
        if find app/src -name "*.kt" -exec grep -l "import.*\*" {} \; | grep -v test; then
          echo "‚ùå Wildcard imports found in production code"
          exit 1
        fi
        
        # Check for TODO comments in production code
        if find app/src/main -name "*.kt" -exec grep -l "TODO\|FIXME" {} \; 2>/dev/null; then
          echo "‚ö†Ô∏è TODO/FIXME comments found in production code"
        fi
    
    - name: Check PR size
      run: |
        CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | wc -l)
        CHANGED_LINES=$(git diff --stat origin/${{ github.base_ref }}...HEAD | tail -1 | grep -o '[0-9]\+ insertions\|[0-9]\+ deletions' | awk '{sum+=$1} END {print sum}')
        
        echo "üìä PR Statistics:"
        echo "Files changed: $CHANGED_FILES"
        echo "Lines changed: $CHANGED_LINES"
        
        if [ "$CHANGED_FILES" -gt 50 ]; then
          echo "‚ö†Ô∏è Large PR: Consider splitting into smaller changes"
        fi
        
        if [ "$CHANGED_LINES" -gt 1000 ]; then
          echo "‚ö†Ô∏è Very large PR: Review may take longer"
        fi
    
    - name: Comment PR
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const fs = require('fs');
          
          // Read test results
          let testStatus = '‚úÖ Passed';
          let lintStatus = '‚úÖ Passed';
          
          // Create comment body
          const comment = `
          ## üîç Quality Gate Results
          
          | Check | Status |
          |-------|--------|
          | Unit Tests | ${testStatus} |
          | Lint | ${lintStatus} |
          | Code Style | ‚úÖ Checked |
          
          ### üìä PR Statistics
          - Files changed: Calculated above
          - Lines changed: Calculated above
          
          ### üéØ Next Steps
          - [ ] Code review by maintainer
          - [ ] Manual testing if needed
          - [ ] Merge after approval
          
          *This comment was automatically generated by GitHub Actions.*
          `;
          
          // Post comment
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/gradle@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
    
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: snyk.sarif